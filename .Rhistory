download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv ")
data1 <- download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv ")
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile="newfile.csv")
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile="newfile.csv", method="curl")
data1 <- read.csv("newfile.csv)
q
data1 <- read.csv("newfile.csv")
data1
data1[["VAL"]]
subset(data1[["VAL"]] > 24)
sum(data1[["VAL"]] > 24)
sum(data1[["VAL"]] == 24)
mil <- data1[["VAL"]]
mil
sum(mil == 24)
sum(mil = 24)
mil
length(mil)
length(mil[mil == 24])
mil
data[["VAL"]]
data1[["VAL"]]
data1[["VAL"]][data1[["VAL"]] == 24]
na.omit(data1[["VAL"]][data1[["VAL"]] == 24])
length(na.omit(data1[["VAL"]][data1[["VAL"]] == 24]))
data1[["FES"]]
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile="newfile.xlsx", method="curl")
newfile.xlsx
data1 <- read.xlsx("newfile.xlsx")
library(xlsx)
install.packages("xlsx")
library(datasets)
data(iris)
?iris
colMeans(iris)
View(iris)
iris[, Sepal.Length]
iris$Sepal.Length
mean(iris$Sepal.Length)
apply(iris[, 1:4], 2, mean)
data(mtcars)
?mtcars
mtcars
View(mtcars)
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
209.21429-82.63636
debug(ls)
ls
ls
?ls
apply(iris[, 1:4], 2, mean)
exit
quit
apply(iris[, 1:4], 2, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
quit
q
q
q
q
q
library(datasets)
data(mtcars)
?mtcars
mtcars
View(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
data(iris)
iris
View(iris)
tapply(iris$Sepal.length, iris$Species, mean)
iris[, Species='virginica']
subset(iris, Species == 'virginica')
vir <- subset(iris, Species == 'virginica')
mean(vir$Sepal.Length)
View(vir)
apply(iris[, 1:4], 2, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
setwd("~/Google Drive/Dev/Coursera/datasciencecoursera/R Programming/Assignment 2/ProgrammingAssignment2")
makeCacheMatrix
library('cachematrix')
package('cachematrix')
source('cachematrix')
source('cachematrixr')
source('cachematrix.R')
makeCacheMatrix
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
